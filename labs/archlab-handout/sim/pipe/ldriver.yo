                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f62804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f72002000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6222                 | 	andq %rdx, %rdx # len == 0
0x034: 709901000000000000   | 	jmp Npos
                            | 
0x03d:                      | Loop:
0x03d: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x047: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x051: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x053: 716600000000000000   | 	jle secondCopy		# if so, goto Npos:
0x05c: c0f00100000000000000 | 	iaddq $1, %rax # count ++
0x066:                      | secondCopy:
0x066: 50a70800000000000000 | 	mrmovq 8(%rdi), %r10
0x070: 40a60800000000000000 | 	rmmovq %r10, 8(%rsi)
0x07a: 62aa                 | 	andq %r10, %r10
0x07c: 718f00000000000000   | 	jle thirdCopy
0x085: c0f00100000000000000 | 	iaddq $1, %rax
0x08f:                      | thirdCopy:
0x08f: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x099: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x0a3: 62aa                 | 	andq %r10, %r10
0x0a5: 71b800000000000000   | 	jle forthCopy
0x0ae: c0f00100000000000000 | 	iaddq $1, %rax
0x0b8:                      | forthCopy:
0x0b8: 50a71800000000000000 | 	mrmovq 24(%rdi), %r10
0x0c2: 40a61800000000000000 | 	rmmovq %r10, 24(%rsi)
0x0cc: 62aa                 | 	andq %r10, %r10
0x0ce: 71e100000000000000   | 	jle fifth
0x0d7: c0f00100000000000000 | 	iaddq $1, %rax
0x0e1:                      | fifth:
0x0e1: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x0eb: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x0f5: 62aa                 | 	andq %r10, %r10
0x0f7: 710a01000000000000   | 	jle sixth
0x100: c0f00100000000000000 | 	iaddq $1, %rax
0x10a:                      | sixth:
0x10a: 50a72800000000000000 | 	mrmovq 40(%rdi), %r10
0x114: 40a62800000000000000 | 	rmmovq %r10, 40(%rsi)
0x11e: 62aa                 | 	andq %r10, %r10
0x120: 713301000000000000   | 	jle seventh
0x129: c0f00100000000000000 | 	iaddq $1, %rax
0x133:                      | seventh:
0x133: 50a73000000000000000 | 	mrmovq 48(%rdi), %r10
0x13d: 40a63000000000000000 | 	rmmovq %r10, 48(%rsi)
0x147: 62aa                 | 	andq %r10, %r10
0x149: 715c01000000000000   | 	jle eighth
0x152: c0f00100000000000000 | 	iaddq $1, %rax
0x15c:                      | eighth:
0x15c: 50a73800000000000000 | 	mrmovq 56(%rdi), %r10
0x166: 40a63800000000000000 | 	rmmovq %r10, 56(%rsi)
0x170: 62aa                 | 	andq %r10, %r10
0x172: 718501000000000000   | 	jle step
0x17b: c0f00100000000000000 | 	iaddq $1, %rax
0x185:                      | step:
0x185: c0f74000000000000000 | 	iaddq $64, %rdi
0x18f: c0f64000000000000000 | 	iaddq $64, %rsi
0x199:                      | Npos: 
0x199: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx # len -= 8
0x1a3: 753d00000000000000   | 	jge Loop		# if so, goto Loop:
0x1ac: c0f20800000000000000 | 	iaddq $8, %rdx
0x1b6: 731802000000000000   | 	je Done
                            | 
0x1bf:                      | remain:
0x1bf: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x1c9: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x1d3: 62aa                 | 	andq %r10, %r10
0x1d5: 71e801000000000000   | 	jle test
0x1de: c0f00100000000000000 | 	iaddq $1, %rax
0x1e8:                      | test:
0x1e8: c0f70800000000000000 | 	iaddq $8, %rdi
0x1f2: c0f60800000000000000 | 	iaddq $8, %rsi
0x1fc: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x206: 76bf01000000000000   | 	jg remain
0x20f: 701802000000000000   | 	jmp Done
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x218:                      | Done:
0x218: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x219:                      | End:
                            | #/* $end ncopy-ys */
0x219:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x220:                      | 	.align 8
0x220:                      | src:
0x220: ffffffffffffffff     | 	.quad -1
0x228: feffffffffffffff     | 	.quad -2
0x230: 0300000000000000     | 	.quad 3
0x238: 0400000000000000     | 	.quad 4
0x240: 0500000000000000     | 	.quad 5
0x248: faffffffffffffff     | 	.quad -6
0x250: f9ffffffffffffff     | 	.quad -7
0x258: 0800000000000000     | 	.quad 8
0x260: f7ffffffffffffff     | 	.quad -9
0x268: f6ffffffffffffff     | 	.quad -10
0x270: f5ffffffffffffff     | 	.quad -11
0x278: 0c00000000000000     | 	.quad 12
0x280: 0d00000000000000     | 	.quad 13
0x288: f2ffffffffffffff     | 	.quad -14
0x290: f1ffffffffffffff     | 	.quad -15
0x298: 1000000000000000     | 	.quad 16
0x2a0: efffffffffffffff     | 	.quad -17
0x2a8: 1200000000000000     | 	.quad 18
0x2b0: edffffffffffffff     | 	.quad -19
0x2b8: ecffffffffffffff     | 	.quad -20
0x2c0: ebffffffffffffff     | 	.quad -21
0x2c8: 1600000000000000     | 	.quad 22
0x2d0: 1700000000000000     | 	.quad 23
0x2d8: e8ffffffffffffff     | 	.quad -24
0x2e0: e7ffffffffffffff     | 	.quad -25
0x2e8: e6ffffffffffffff     | 	.quad -26
0x2f0: 1b00000000000000     | 	.quad 27
0x2f8: e4ffffffffffffff     | 	.quad -28
0x300: e3ffffffffffffff     | 	.quad -29
0x308: 1e00000000000000     | 	.quad 30
0x310: 1f00000000000000     | 	.quad 31
0x318: e0ffffffffffffff     | 	.quad -32
0x320: 2100000000000000     | 	.quad 33
0x328: 2200000000000000     | 	.quad 34
0x330: ddffffffffffffff     | 	.quad -35
0x338: dcffffffffffffff     | 	.quad -36
0x340: dbffffffffffffff     | 	.quad -37
0x348: daffffffffffffff     | 	.quad -38
0x350: d9ffffffffffffff     | 	.quad -39
0x358: 2800000000000000     | 	.quad 40
0x360: 2900000000000000     | 	.quad 41
0x368: 2a00000000000000     | 	.quad 42
0x370: 2b00000000000000     | 	.quad 43
0x378: d4ffffffffffffff     | 	.quad -44
0x380: d3ffffffffffffff     | 	.quad -45
0x388: d2ffffffffffffff     | 	.quad -46
0x390: 2f00000000000000     | 	.quad 47
0x398: 3000000000000000     | 	.quad 48
0x3a0: cfffffffffffffff     | 	.quad -49
0x3a8: 3200000000000000     | 	.quad 50
0x3b0: 3300000000000000     | 	.quad 51
0x3b8: 3400000000000000     | 	.quad 52
0x3c0: cbffffffffffffff     | 	.quad -53
0x3c8: 3600000000000000     | 	.quad 54
0x3d0: c9ffffffffffffff     | 	.quad -55
0x3d8: c8ffffffffffffff     | 	.quad -56
0x3e0: c7ffffffffffffff     | 	.quad -57
0x3e8: 3a00000000000000     | 	.quad 58
0x3f0: 3b00000000000000     | 	.quad 59
0x3f8: 3c00000000000000     | 	.quad 60
0x400: 3d00000000000000     | 	.quad 61
0x408: 3e00000000000000     | 	.quad 62
0x410: 3f00000000000000     | 	.quad 63
0x418: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x420:                      | 	.align 16
0x420:                      | Predest:
0x420: fadebc0000000000     | 	.quad 0xbcdefa
0x428:                      | dest:
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620:                      | Postdest:
0x620: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x628:                      | .align 8
                            | # Run time stack
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
0x650: 0000000000000000     | 	.quad 0
0x658: 0000000000000000     | 	.quad 0
0x660: 0000000000000000     | 	.quad 0
0x668: 0000000000000000     | 	.quad 0
0x670: 0000000000000000     | 	.quad 0
0x678: 0000000000000000     | 	.quad 0
0x680: 0000000000000000     | 	.quad 0
0x688: 0000000000000000     | 	.quad 0
0x690: 0000000000000000     | 	.quad 0
0x698: 0000000000000000     | 	.quad 0
0x6a0: 0000000000000000     | 	.quad 0
                            | 
0x6a8:                      | Stack:
